# # If you need help with the configuration or have any questions related to Sponge,
# # join us on Discord or drop by our forums and leave a post.
#
# # Discord: https://discord.gg/sponge
# # Forums: https://forums.spongepowered.org/

commands {
    # Command aliases will resolve conflicts when multiple plugins request a specific command,
    # Correct syntax is <unqualified command>=<plugin name> e.g. "sethome=homeplugin"
    aliases {}
    # Defines how Sponge should act when a user tries to access a command they do not have
    # permission for
    commands-hidden {
        # If this is true, when a user tries to tab complete a command, or use "/sponge which" or
        # "/sponge:help" this prevents commands a user does not have permission for from being completed.
        #
        # Note that some commands may not show up during tab complete if a user does not have permission
        # regardless of this setting.
        hide-on-discovery-attempt=true
        # If this is true, when a user tries to use a command they don't have permission for, Sponge
        # will act as if the command doesn't exist, rather than showing a no permissions message.
        hide-on-execution-attempt=false
    }
    # Some mods may not trigger a permission check when running their command. Setting this to
    # true will enforce a check of the Sponge provided permission ("<modid>.command.<commandname>").
    # Note that setting this to true may cause some commands that are generally accessible to all to
    # require a permission to run.
    #
    # Setting this to true will enable greater control over whether a command will appear in
    # tab completion and Sponge's help command.
    #
    # If you are not using a permissions plugin, it is highly recommended that this is set to false
    # (as it is by default).
    enforce-permission-checks-on-non-sponge-commands=false
}
debug {
    # Detect and prevent certain attempts to use entities concurrently.
    # WARNING: May drastically decrease server performance. Only set this to 'true' to debug a pre-existing issue.
    concurrent-entity-checks=false
}
exploits {
    # Enables focing a chunk load when an entity position
    # is set. Usually due to teleportation, vehicle movement
    # etc. can a position lead an entity to no longer exist
    # within it's currently marked and tracked chunk. This will
    # enable that chunk for the position is loaded. Part of several
    # exploits.See https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0335-Ensure-chunks-are-always-loaded-on-hard-position-set.patch
    # (Only affects SpongeVanilla)
    load-chunk-on-entity-position-set=true
    # Enables forcing chunks to save when an entity is added
    # or removed from said chunk. This is a partial fix for
    # some exploits using vehicles.See https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0306-Mark-chunk-dirty-anytime-entities-change-to-guarante.patch
    # (Only affects SpongeVanilla)
    mark-chunks-as-dirty-on-entity-list-modification=true
    # Controls the maximum size of a book page. (Default: 32767)
    max-book-page-size=32767
    # Controls the maximum size of a book
    max-book-size=32767000
    # Enables forcing updates to the player's location on vehicle movement.
    # This is partially required to update the server's understanding of
    # where the player exists, and allows chunk loading issues to be avoided
    # with laggy connections and/or hack clients.See https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0378-Sync-Player-Position-to-Vehicles.patch
    # (Only affects SpongeVanilla)
    sync-player-positions-for-vehicle-movement=true
    # Enables forcing a chunk-tracking refresh on entity movement.
    # This enables a guarantee that the entity is tracked in the
    # proper chunk when moving.https://github.com/PaperMC/Paper/blob/fd1bd5223a461b6d98280bb8f2d67280a30dd24a/Spigot-Server-Patches/0315-Always-process-chunk-registration-after-moving.patch
    # (Only affects SpongeVanilla)
    update-tracked-chunk-on-entity-move=true
}
general {
    # The directory for Sponge plugin configurations, relative to the
    # execution root or specified as an absolute path.
    # Note that the default: "${CANONICAL_GAME_DIR}/config"
    # is going to use the "config" directory in the root game directory.
    # If you wish for plugin configs to reside within a child of the configuration
    # directory, change the value to, for example, "${CANONICAL_CONFIG_DIR}/sponge/plugins".
    # Note: It is not recommended to set this to "${CANONICAL_CONFIG_DIR}/sponge", as there is
    # a possibility that plugin configurations can conflict the Sponge core configurations.
    config-dir="${CANONICAL_GAME_DIR}/config"
    # Additional directory to search for plugins, relative to the
    # execution root or specified as an absolute path.
    # Note that the default: "${CANONICAL_MODS_DIR}/plugins"
    # is going to search for a plugins folder in the mods directory.
    # If you wish for the plugins folder to reside in the root game
    # directory, change the value to "${CANONICAL_GAME_DIR}/plugins".
    plugins-dir="${CANONICAL_MODS_DIR}/plugins"
}
ip-forwarding {
    # The IP forwarding mode to use with a proxy. Supported values:
    # - NONE: Do not forward IP addresses
    # - LEGACY: Use the BungeeCord/pre-1.13 protocol for IP forwarding (CAUTION: This protocol is insecure)
    # - MODERN: Use the Velocity protocol for IP forwarding
    # When any forwarding mode but NONE is selected, the server will be put into offline mode and will only accept connections from proxies.
    mode=LEGACY
    # The player info forwarding secret from your Velocity configuration.
    # Only used with 'MODERN' forwarding mode.
    secret=""
}
ip-sets {}
modules {
    # Controls block range and tick rate of block entities.
    # Use with caution as this can break intended functionality.
    block-entity-activation=false
    entity-activation-range=true
    entity-collision=true
    # Controls whether any exploit patches are applied.
    # If there are issues with any specific exploits, please
    # test in the exploit category first, before disabling all
    # exploits with this toggle.
    exploits=true
    # Enables support for BungeeCord and Velocity IP forwarding.
    # Additional options must be configured in the 'ip-forwarding' configuration section.
    ip-forwarding=true
    # Allows configuring Vanilla movement and speed checks
    movement-checks=false
    optimizations=true
    # Use real (wall) time instead of ticks as much as possible
    real-time=false
    tracking=true
}
optimizations {
    # Caches tameable entities owners to avoid constant lookups against data watchers. If mods
    # cause issues, disable this.
    cache-tameable-owners=true
    # Occasionally, some built in advancements,
    # recipes, etc. can fail to deserialize properly
    # which ends up potentially spamming the server log
    # and the original provider of the failing content
    # is not able to fix. This provides an option to
    # suppress the exceptions printing out in the log.
    disable-failing-deserialization-log-spam=true
    # Leaf blocks placed by players will normally schedule
    # updates for themselves after placement, and on neighboring
    # placement. This optimization is relatively small but effectively
    # disables scheduling updates and reactive updates to leaves that
    # are `persistent`. Does not drastically improve performance.
    disable-scheduled-updates-for-persistent-leaf-blocks=true
    # If 'true', block item drops are pre-processed to avoid
    # having to spawn extra entities that will be merged post spawning.
    # Usually, Sponge is smart enough to determine when to attempt an item pre-merge
    # and when not to, however, in certain cases, some mods rely on items not being
    # pre-merged and actually spawned, in which case, the items will flow right through
    # without being merged.
    drops-pre-merge=true
    # Uses theosib's redstone algorithms to completely overhaul the way redstone works.
    eigen-redstone {
        # If 'true', uses theosib's redstone implementation which improves performance.
        # See https://bugs.mojang.com/browse/MC-11193 and
        #    https://bugs.mojang.com/browse/MC-81098 for more information.
        # Note: We cannot guarantee compatibility with mods. Use at your discretion.
        enabled=false
        # If 'true', restores the vanilla algorithm for computing wire power levels when powering off.
        vanilla-decrement=false
        # If 'true', restores the vanilla algorithm for propagating redstone wire changes.
        vanilla-search=false
    }
    # By default, Vanilla 'warms-up' all migration rules for
    # every Minecraft version when the game starts. This often
    # causes a period of extremely high CPU usage when the game
    # starts, often for no benefit since the typical pattern is
    # that most chunks do not have to be migrated, or only have
    # to be migrated from just a few versions. This option disables
    # migration rules from being 'warmed-up' and instead forces them
    # to be generated on demand. This is a very safe optimization and
    # should usually remain enabled.
    enable-lazydfu=true
    # If 'true', allows for Sponge to make better assumptions on single threaded
    # operations with relation to various checks for server threaded operations.
    # This is default to true due to Sponge being able to precisely inject when
    # the server thread is available. This should make an already fast operation
    # much faster for better thread checks to ensure stability of sponge's systems.
    faster-thread-checks=true
    # Based on Paper's TileEntity Ticking optimization
    # setting this to 'true' prevents unnecessary ticking in Chests and EnderChests
    # See https://github.com/PaperMC/Paper/blob/bb4002d82e355f033906fc894cc2320f665ba72d/Spigot-Server-Patches/0022-Optimize-TileEntity-Ticking.patch
    optimize-block-entity-ticking=true
    # Based on Aikar's optimization of Hoppers, setting this to 'true'
    # will allow for hoppers to save performing server -> client updates
    # when transferring items. Because hoppers can transfer items multiple
    # times per tick, these updates can get costly on the server, with
    # little to no benefit to the client. Because of the nature of the
    # change, the default will be 'false' due to the inability to pre-emptively
    # foretell whether mod compatibility will fail with these changes or not.
    # Refer to: https://github.com/PaperMC/Paper/blob/8175ec916f31dcd130fe0884fe46bdc187d829aa/Spigot-Server-Patches/0269-Optimize-Hoppers.patch
    # for more details.
    optimize-hoppers=false
    # If 'true', re-writes the incredibly inefficient Vanilla Map code.
    # This yields enormous performance enhancements when using many maps, but has a tiny chance of breaking mods that modify Vanilla.It is strongly recommended to keep this on, unless explicitly advised otherwise by a Sponge developer
    optimize-maps=true
    # Vanilla performs a lot of is area loaded checks during
    # entity collision calculations with blocks, and because
    # these calculations require fetching the chunks to see
    # if they are loaded, before getting the block states
    # from those chunks, there can be some small performance
    # increase by checking the entity's owned active chunk
    # it may currently reside in. Essentially, instead of
    # asking the world if those chunks are loaded, the entity
    # would know whether it's chunks are loaded and that neighbor's
    # chunks are loaded.
    use-active-chunks-for-collisions=false
}
permissions {
    # If 'true', Sponge plugins will be used to handle permissions rather than any a platform may provide
    use-platform-permissions-handler=false
}
phase-tracker {
    # A mapping that is semi-auto-populating for TileEntities whose types
    # are found to be providing "null" Block sources as neighbor notifications
    # that end up causing crashes or spam reports. If the value is set to
    # "true", then a "workaround" will be attempted. If not, the
    #
    # current BlockState at the target source will be queried from the world.
    # This map having a specific
    # entry of a TileEntity will prevent a log or warning come up to any logs
    # when that "null" arises, and Sponge will self-rectify the TileEntity
    # by calling the method "getBlockType()". It is advised that if the mod
    # id in question is coming up, that the mod author is notified about the
    # error-prone usage of the field "blockType". You can refer them to
    # the following links for the issue:
    # https://gist.github.com/gabizou/ad570dc09dfed259cac9d74284e78e8b
    # https://github.com/SpongePowered/SpongeForge/issues/2787
    # Also, please provide them with these links for the example PR to
    # fix the issue itself, as the fix is very simple:
    # https://github.com/TehNut/Soul-Shards-Respawn/pull/24
    # https://github.com/Epoxide-Software/Enchanting-Plus/pull/135
    auto-fix-null-source-block-providing-block-entities {}
    # If set to 'true', when a mod or plugin attempts to submit a command
    # asynchronously, Sponge will automatically capture said command
    # and submit it for processing on the server thread. The catch to
    # this is that some mods are performing these commands in vanilla
    # without considering the possible consequences of such commands
    # affecting any thread-unsafe parts of Minecraft, such as worlds,
    # block edits, entity spawns, etc. If this is set to false, Sponge
    # will politely ignore the command being executed, and emit a warning
    # about said command anyways.
    capture-async-commands=true
    # If set to 'true', when a mod or plugin attempts to spawn an entity
    # off the main server thread, Sponge will automatically
    # capture said entity to spawn it properly on the main
    # server thread. The catch to this is that some mods are
    # not considering the consequences of spawning an entity
    # off the server thread, and are unaware of potential race
    # conditions they may cause. If this is set to false,
    # Sponge will politely ignore the entity being spawned,
    # and emit a warning about said spawn anyways.
    capture-async-spawning-entities=true
    # If 'true', more thorough debugging for PhaseStates
    # such that a StackTrace is created every time a PhaseState
    # switches, allowing for more fine grained troubleshooting
    # in the cases of runaway phase states. Note that this is
    # not extremely performant and may have some associated costs
    # with generating the stack traces constantly.
    generate-stack-trace-per-phase=false
    # The maximum number of times to recursively process transactions in a single phase.
    # Some mods may interact badly with Sponge's block capturing system, causing Sponge to
    # end up capturing block transactions every time it tries to process an existing batch.
    # Due to the recursive nature of the depth-first processing that Sponge uses to handle block transactions,
    # this can result in a stack overflow, which causes us to lose all information about the original cause of the issue.
    # To prevent a stack overflow, Sponge tracks the current processing depth, and aborts processing when it exceeds
    # this threshold.
    # The default value should almost always work properly -  it's unlikely you'll ever have to change it.
    max-block-processing-depth=1000
    # If verbose is not enabled, this restricts the amount of
    # runaway phase state printouts, usually happens on a server
    # where a PhaseState is not completing. Although rare, it should
    # never happen, but when it does, sometimes it can continuously print
    # more and more. This attempts to placate that while a fix can be worked on
    # to resolve the runaway. If verbose is enabled, they will always print.
    maximum-printed-runaway-counts=3
    # If true, when a mod attempts to perform a neighbor notification
    # on a block, some mods do not know to perform a 'null' check
    # on the source block of their TileEntity. This usually goes by
    # unnoticed by other mods, because they may perform '==' instance
    # equality checks instead of calling methods on the potentially
    # null Block, but Sponge uses the block to build information to
    # help tracking. This has caused issues in the past. Generally,
    # this can be useful for leaving "true" so a proper report is
    # generated once for your server, and can be reported to the
    # offending mod author.
    # This is 'false' by default in SpongeVanilla.
    # Review the following links for more info:
    # https://gist.github.com/gabizou/ad570dc09dfed259cac9d74284e78e8b
    # https://github.com/SpongePowered/SpongeForge/issues/2787
    report-null-source-blocks-on-neighbor-notifications=true
    # If 'true', the phase tracker will print out when there are too many phases
    # being entered, usually considered as an issue of phase re-entrance and
    # indicates an unexpected issue of tracking phases not to complete.
    # If this is not reported yet, please report to Sponge. If it has been
    # reported, you may disable this.
    verbose=true
    # If 'true', the phase tracker will dump extra information about the current phases
    # when certain non-PhaseTracker related exceptions occur. This is usually not necessary, as the information
    # in the exception itself can normally be used to determine the cause of the issue
    verbose-errors=false
}
# Enables server owners to require specific plugins to provide Sponge services
services {
    # Services specified here can be implemented by plugins. To ensure that aspecific plugin implements a given service, set the relevant option to itsplugin ID. If you wish to use Sponge's default for a given service, use'sponge' as the ID.
    #
    # If the plugin ID is unknown, or the option is set to '?', all plugins willbe given the opportunity to register their service. If multiple pluginsattempt to register, one will be picked in an implementation dependent way.If no plugins attempt to register a service, the Sponge default will be usedif one exists.
    #
    # No Sponge default service exists for the Economy service.
    plugins {
        # Specifies the plugin that will provide the ban service
        ban-service="?"
        # Specifies the plugin that will provide the context service
        context-service="?"
        # Specifies the plugin that will provide the economy service
        economy-service="?"
        # Specifies the plugin that will provide the pagination service
        pagination-service="?"
        # Specifies the plugin that will provide the permission service
        permission-service="?"
        # Specifies the plugin that will provide the whitelist service
        whitelist-service="?"
    }
}
# Configuration options related to the SQL manager, including connection aliases etc
sql {
    # Aliases for SQL connections, in the format jdbc:protocol://[username[:password]@]host/database
    aliases {}
}
# Blocks to blacklist for safe teleportation.
teleport-helper {
    # If 'true', this blacklist will always be respected, otherwise, plugins can choose whether
    # or not to respect it.
    force-blacklist=false
    # Blocks that are listed here will not be selected by Sponge's safe teleport routine as
    # a safe block for players to warp into.
    # You should only list blocks here that are incorrectly selected, solid blocks that prevent
    # movement are automatically excluded.
    unsafe-body-blocks=[]
    # Blocks that are listed here will not be selected by Sponge's safe
    # teleport routine as a safe floor block.
    unsafe-floor-blocks=[]
}
# Active configuration version
# This has no relation to the current Sponge version, and will be updated automatically
# Manual changes may cause unpredictable results.
version=1
world {
    # The interval, in seconds, used by the GameProfileQueryTask to process queued GameProfile requests. (Default: 4)
    # Note: This setting should be raised if you experience the following error:
    # "The client has sent too many requests within a certain amount of time".
    # Finally, if set to 0 or less, the default interval will be used.
    game-profile-lookup-task-interval=4
    # The list of uuid's that should never perform a lookup against Mojang's session server.
    # Note: If you are using SpongeForge, make sure to enter any mod fake player's UUID to this list.
    invalid-lookup-uuids=[
        "00000000-0000-0000-0000-000000000000",
        "41c82c87-7afb-4024-ba57-13d2c99cae77"
    ]
    # If 'true', natural leaf decay is allowed.
    leaf-decay=true
    # The auto-save tick interval used when saving global player data. (Default: 6000)
    # Note: 20 ticks is equivalent to 1 second. Set to 0 to disable.
    player-auto-save-interval=6000
}
