#
# Copyright 2019-2023 CloudNetService team & contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
cloudnet-init-eula-not-accepted=If you don't accept the eula, you cannot run a minecraft server!
cloudnet-init-eula=Do you agree to the Mojang EULA (https://aka.ms/MinecraftEULA)?
cloudnet-init-setup-cluster-cluster-id=What is the id of your cluster? (you can find it in the config.json on of your nodes)
cloudnet-init-setup-cluster-install=Is this node part of a cluster? (MultiRoot)
cloudnet-init-setup-cluster-list-nodes=What are the names of your already existing nodes? (separated by ";")
cloudnet-init-setup-cluster-node-host=What is the host and port of the node "{0$node$}"? (you can find it in the config.json at "listeners")
cloudnet-init-setup-host-address=On which host should the services be started on? Note: Wildcard addresses (like 0.0.0.0) are not allowed
cloudnet-init-setup-internal-host=On which host and port should CloudNet run on? (This is NOT your proxy host/port)
cloudnet-init-setup-memory=How much memory (in MB) can the services running on this CloudNet node use?
cloudnet-init-setup-node-id=What should the name of this CloudNet node be?
cloudnet-init-setup-tasks-javacommand=What is the path to the Java executable?
cloudnet-init-setup-tasks-proxy-environment=What should be the environment of the proxy?
cloudnet-init-setup-tasks-proxy-version=Which ServiceVersion should be used on the proxies?
cloudnet-init-setup-tasks-server-environment=What should be the environment of the services?
cloudnet-init-setup-tasks-server-version=Which ServiceVersion should be used on the services?
cloudnet-init-setup-tasks-should-install-proxy=Should a default proxy be created?
cloudnet-init-setup-tasks-should-install-server=Should a default lobby be created?
cloudnet-init-setup-web-host=On which host and port should CloudNet's WebServer run?
cloudnet-init-default-modules=Which default modules should be installed? (separated by a space)
#
# Console animations
#
ca-question-list-cancel=You can always cancel the process by typing "cancel"!
ca-question-list-cancelled=The process has been cancelled!
ca-question-list-explain=Use the arrow keys to scroll through all possible values (if there are default values specified). If there is a recommended value available, it is in the command input line by default
ca-question-list-invalid-default=Please provide a valid value!
ca-question-list-possible-answers-list=Possible answers: {0$values$}
ca-question-list-question-list=You have to provide one of the following: {0$values$}
#
# Network
#
client-network-channel-close=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] has closed the connection
client-network-channel-init=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] connected to the server
server-network-channel-close=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] was closed
server-network-channel-init=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] was connected
http-listener-bound=Successfully bound an HTTP listener to the address "{0$address$}"...
http-listener-bound-exceptionally=Unable to bind an HTTP listener to "{0$address$}": {1$reason$}
network-listener-bound=Successfully bound a network listener to the address "{0$address$}"...
network-listener-bound-exceptionally=Unable to bind network listener to "{0$address$}": {1$reason$}
network-selected-transport=Network components are using {0$transport$} transport
network-selected-dispatch-thread-type=Network dispatchers are using {0$type$} threads
startup-failed-no-network-listener-bound=Unable to complete startup, no network listener was bound successfully! CloudNet will stop in 5 seconds
#
# Application lifecycle
#
start-version-provider=Loaded {0$amount$} service versions...
start-module-updater=Applying needed updates to installed modules...
start-commands=Registered commands...
start-node-connection-try=Trying to connect to node {0$name$}...
start-node-connection-failure=Unable to connect to node {0$name$}: {1$reason$}
start-node-connection-waiting=Waiting for {0$amount$} node connections to establish...
start-requesting-data=Requesting cluster sync from head node...
start-connect-database=Using database {0$database$}...
start-done=Startup done, starting tick loop (Took {0$starttime$}ms)
stop-application=Stopping application...
stop-node-connections=Closing connections to all nodes of the cluster...
stop-providers=Closing providers...
stop-network-components=Closing network components...
stop-services=Stopping all running services...
stop-delete-temp=Deleting temporary files...
#
# Services
#
cloudnet-service-jar-file-not-found-error=No application file found for CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}]! Please check the availability of this file. Using the "version" command a version can be installed.
cloudnet-service-manager-cpu-usage-to-high-error=The CPU load is too high to create a new service! The system will try to start this service as soon as there are enough resources.
cloudnet-service-manager-max-memory-error=The maximum allocatable memory has been reached (of CloudNet, other system resources might still be available)! The limit has to be increased or other services need to be stopped.
cloudnet-service-networking-connected=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] was successfully connected to the channel [serverAddress={3$serverAddress$} clientAddress={4$clientAddress$}]
cloudnet-service-networking-disconnected=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] was closed by the channel [serverAddress={3$serverAddress$} clientAddress={4$clientAddress$}]
cloudnet-service-post-delete-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been deleted
cloudnet-service-post-prepared-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been prepared
cloudnet-service-post-start-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been started
cloudnet-service-post-stop-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been stopped
cloudnet-service-post-start-message-different-node=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] is starting on node {3$node$}...
cloudnet-service-post-stop-message-different-node=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] is stopped on node {3$node$}...
#
# Cluster
#
cluster-local-db-warning=CloudNet runs in a cluster, but a local embedded database is used! This can cause big synchronization problems. Please consider switching to a central database (like MongoDB) that all nodes can connect to.
cluster-server-soft-disconnect=Marking node [uniqueId={0$id$}] temporarily as disconnected because it was idling for too long! [lastUpdate={1$time$}ms ago]
cluster-server-hard-disconnect=Disconnecting node [uniqueId={0$id$}] because it did not reconnect within {1$maxDisconnectTime$}ms! [lastStateChange={2$time$}ms ago]
cluster-server-networking-authorization-failed=Authorization unfortunately failed to the node with the address {0$address$}
cluster-server-networking-disconnected=The connection to the node [uniqueId={0$id$}] was interrupted!
cluster-sync-accept-yours=Using and applying the local version to the cluster...
cluster-sync-accepted-theirs=Applying the proposed change...
cluster-sync-change-decision-question=Do you want to [1] accept the changes, [2] apply your version, [3] skip the change?
cluster-sync-skip=Skipped applying of the current change
#
# Modules
#
cloudnet-load-modules-invalid-checksum=The checksum of the module {0$module$} does not match, aborting update
cloudnet-install-modules-invalid-checksum=The checksum of the module {0$module$} does not match, aborting installation
cloudnet-post-install-dependency-module=Dependency {3$group$}:{4$name$}:{5$version$} for module {0$module_group$}:{1$module_name$}:{2$module_version$} was successfully installed
cloudnet-post-load-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was successfully loaded
cloudnet-post-reload-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was reloaded successfully
cloudnet-post-start-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was started successfully
cloudnet-post-stop-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was stopped successfully
cloudnet-post-unload-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was removed successfully
#
# Commands
#
command-no-description=No command description provided
command-confirmation-no-requests=There are no commands to confirm
command-confirmation-required=Please confirm executing the command by executing ''&bconfirm&r'' within 30s
invalid-command-sender=This command cannot be executed by ''{0$source$}''
invalid-command-syntax=Invalid syntax! Use {0$syntax$}
no-such-command=Command could not be found! For help, use the command "help"
argument-parse-failure-no-input-was-provided=No input provided
argument-parse-failure-boolean=The given input {0$input$} is not a boolean
argument-parse-failure-number=The given input {0$input$} is not a number
argument-parse-failure-char=The given input {0$input$} is not a char
argument-parse-failure-string=The given input {0$input$} is not a string
argument-parse-failure-uuid=The given input {0$input$} is not an uuid
argument-parse-failure-enum=The given input enum {0$input$} is not one of the following {1$values$}
argument-parse-failure-regex=The given input &b{1$input$}&r does not match &b{0$regex$}
argument-parse-failure-duration=The given input {0$input$} is not a duration
argument-parse-failure-flag-unknown=The given flag {0$flag$} is unknown
argument-parse-failure-flag-duplicate-flag=The given flag {0$flag$} can only be used once
argument-parse-failure-flag-missing-argument=Missing argument for flag {0$flag$}
argument-parse-failure-flag-no-permission=You are not allowed to use this flag
missing-command-permission=You are not allowed to execute this sub command
#
# General commands
#
command-general-group-does-not-exist=That group doesn't exist!
command-any-host-and-port-invalid=The given input {0$input$} is not a valid host and port. Note: Wildcard addresses (like 0.0.0.0) are not allowed
command-assignable-host-invalid=The given input {0$input$} is not an assignable host. Note: Wildcard addresses (like 0.0.0.0) are not allowed
command-any-host-invalid=The given input {0$input$} is not a valid host address. Note: Wildcard addresses (like 0.0.0.0) are not allowed
#
# Command Help
#
commnad-help-description=Shows all commands and their description
command-help-docs=Follow this url {0$url$} to get to the documentation for the {1$command$} command
command-help-docs-no-url=The {0$command$} command has no documentation url
#
# Command Me
#
command-me-description=Displays all important information about this node and the running jvm
#
# Command clear
#
command-clear-description=Clears the entire console of the node to get a better overview
#
# Command Cluster
#
command-cluster-description=Manages the cluster and provides information about it
command-cluster-add-node-success=Registered the new node ({0$name$}) to the cluster configuration
command-cluster-node-not-found=That node doesn't exist
command-cluster-node-set-drain=Draining is now {0, choice, 0#disabled|1#enabled$drain$} for node {1$node$}
command-cluster-push-static-service-failed=Failed to deploy the static service to the cluster
command-cluster-push-static-service-not-found=The static service was not found
command-cluster-push-static-service-running=The static service is running. Stop the service to deploy it into the cluster
command-cluster-push-static-service-starting=Starting the deployment of the static service...
command-cluster-push-static-service-success=Successfully deployed the static service into the cluster
command-cluster-push-static-service-existing=The received static service {0$service$} already exists, aborting deployment
command-cluster-push-static-service-received-success=Successfully received the deployed static service {0$service$}
command-cluster-push-static-service-running-remote=The received static service {0$service$} is running, aborting deployment
command-cluster-push-template-compress=Compressing the template {0$template$}...
command-cluster-push-template-failed=Failed to send the local template {0$template$} to the cluster
command-cluster-push-template-success=The local template {0$template$} was successfully sent to all nodes
command-cluster-remove-node-success=The node {0$node$} has been removed successfully
command-cluster-start-sync=The cluster sync starts now
#
# Command Service
#
command-service-description=Manages all services in the cluster
command-service-copy-no-default-template=The service you provided does not have a default template, use "copy {0$name$} template=storage:prefix/name" to provide a template you would like to copy to
command-service-copy-success=The service {0$name$} was successfully copied to the template {1$template$}
command-service-add-deployment-success=The deployment {0$deployment$} was successfully added to the waiting deployments
command-service-deploy-deployment-success=The resources of the service were successfully deployed
command-service-add-inclusion-success=The inclusion {0$inclusion$} was successfully added to the waiting integrations
command-service-include-inclusion-success=All waiting inclusions were downloaded and installed to the service
command-service-add-template-success=The template {0$template$} was successfully found and was added to the waiting templates
command-service-include-templates-success=All waiting templates were copied to the service
command-service-service-not-found=That service doesn't exist
command-service-toggle-disabled=Disabled the automatic console logging for {0$service$}
command-service-toggle-enabled=Enabled the automatic console logging for {0$service$}
#
# Command Create
#
command-create-description=Creates one or more new services based on a task or completely independent
command-create-by-task-starting=Starting to create {1$amount$} services for {0$task$}
command-create-by-task-failed=The services couldn't be created
command-create-by-task-success=The services were created based on the task. They can be managed with the 'service' command
#
# Command Debug
#
command-debug-description=Toggle the global debug mode
#
# Command exit
#
command-exit-description=Stops the program and all managed subprocesses
#
# Command Migrate
#
command-migrate-description=Allows to migrate data known to CloudNet between different storages
command-migrate-current-database=Migration of {0$db$} in progress...
command-migrate-database-connection-failed=The connection to the database failed
command-migrate-source-equals-target=Migrating data to the same database is not possible
command-migrate-success=Migrating {0$source$} to {1$target$} was successful
command-migrate-unknown-database-provider=This database type does not exist
#
# Command Modules
#
command-modules-description=Manages installed modules and allows to load local or install remote modules
command-modules-install-missing-depend=The module {0$module$} requires these dependencies to run: {1$dependencies$}
command-modules-module-already-loaded=The module {0$module$} is already loaded
command-modules-module-file-not-found=The file {0$path$} does not exist
command-modules-module-not-a-file={0$path$} is not a file
command-modules-module-installed=The module {0$module$} was successfully installed
command-module-skipping-checksum-fail=The checksum of the official module {0$module$} did not match but the validation was skipped!
command-modules-checksum-validation-skippable=The module checksum of the official module {0$module$} did not match! (most likely your module definition is outdated, restart CloudNet to auto update them) You can install the module by appending "--ncv" to the command (! could lead to problems !)
command-modules-module-not-loaded=The module {0$module$} is not loaded
command-modules-module-not-started=The module {0$module$} is not started
command-modules-module-not-stopped=The module {0$module$} is not stopped
command-modules-module-runtime-module=The module {0$module$} is not reloadable as it is a runtime module
command-modules-no-such-installable-module=There is no module named {0$name$}
command-modules-module-already-installed=The module {0$name$} is already installed. Updates of modules are performed automatically when CloudNet is restarted
command-modules-module-uninstall=The module {0$module$} was successfully uninstalled
command-modules-module-uninstall-failed=The module {0$module$} could not be uninstalled. Check the console log for further information
#
# Command Config
#
command-config-description=Administration of the cloudnet node configuration
command-config-node-ip-alias-already-existing=The ip alias {0$alias$} already exists
command-config-node-ip-alias-added=The host address {1$address$} aliased as {0$alias$} was added successfully
command-config-node-ip-alias-remove=The ip alias {0$alias$} was removed
command-config-node-add-ip-whitelist=The ip {0$ip$} was added to the ip whitelist
command-config-node-remove-ip-whitelist=The ip address {0$ip$} was removed from the ip whitelist
command-config-node-set-max-memory=The maximum memory for the node is now set to {0$memory$}
command-config-node-set-java-command=The default java command for services is now set to {0$path$} using Java version {1$version$}
command-config-node-reload-config=The node configuration was reloaded. Note: Not all changes are applied without a restart
command-config-reload-config=Reloaded the node, task, group and permission configurations. Note: Not all changes are applied without a restart
#
# Command Groups
#
command-groups-description=Administers the configurations of all persistent groups
command-groups-add-collection-property=The {0$property$} {1$value$} was successfully added to the group {2$group$}
command-groups-remove-collection-property=The {0$property$} {1$value$} was successfully removed from the group {2$group$}
command-groups-clear-property=The {0$property$} for the group {1$group$} were cleared successfully
command-groups-delete-group=The group was successfully deleted
command-groups-group-already-existing=The group {0$group$} already exists
command-groups-reload-success=The group configurations have been reloaded
command-groups-create-success=The group {0$name$} was successfully created
command-groups-rename-success=The group {0$group$} was successfully renamed to {1$new$}. &cKeep in mind that you might need to change the name in other configurations e.g. tasks
#
# Tasks
#
cloudnet-load-task-unsupported-java-version=Removing java command from {0$task$} because it isn't a valid java installation or incompatible with Java 17
#
# Command Tasks
#
command-tasks-description=Administers the configurations of all persistent tasks
command-tasks-create-task=The empty task was successfully created. Configure it via the command 'tasks' or in the configuration file
command-tasks-delete-task=The task {0$name$} was successfully deleted
command-tasks-node-not-found=That node doesn't exist!
command-tasks-runtime-not-found=The runtime {0$runtime$} does not exist!
command-tasks-reload-success=The ServiceTasks have been reloaded!
command-tasks-add-collection-property=The {0$property$} {2$value$} was successfully added to the task {1$task$}
command-tasks-set-property-success=The {0$property$} of the task {1$task$} was changed to {2$value$}
command-tasks-remove-collection-property=The {0$property$} {2$value$} was successfully removed from the task {1$task$}
command-tasks-clear-property=The {0$property$} for the task {1$task$} were cleared successfully
command-tasks-task-already-existing=The task {0$task$} already exists!
command-tasks-task-rename-success=The task {0$task$} was successfully renamed to {1$new$}. &cKeep in mind that you might need to change the name in other configurations e.g. groups
command-tasks-task-not-found=That task doesn't exist!
command-tasks-unknown-host-address-or-alias=The host {0$host$} is neither an assignable host nor an ip alias of the node. Note: Wildcard addresses (like 0.0.0.0) are not allowed
#
# Command Tasks (setup)
#
command-tasks-setup-create-success=The new task {0$name$} has been successfully created!
command-tasks-setup-question-application=Which service version should run on services of this task?
command-tasks-setup-question-environment=What should be the environment of this task?
command-tasks-setup-question-javacommand-invalid=The provided executable is not a valid java installation path
command-tasks-setup-question-javacommand=What is the path to the Java executable?
command-tasks-setup-question-maintenance=Should the task be in maintenance by default? (this prevents auto starting of the services)
command-tasks-setup-question-memory=How much memory is each service of the task allowed to use? (in MB)
command-tasks-setup-question-minservices=How many services of this task should be always online?
command-tasks-setup-question-name-splitter=What should the name splitter of the new task be?
command-tasks-setup-question-name=What should the name of the new task be?
command-tasks-setup-question-startport=What should be the start port of the task?
command-tasks-setup-question-host-address=What is the host address of the task?
command-tasks-setup-question-static=Should the services of this task be static that their files are never deleted?
#
# Command Template
#
command-template-description=Manages local and remote templates
command-template-copy-failed=Unable to prepare source template for deployment! Does the source template exists?
command-template-copy-same-source-and-target=The source and target templates cannot be the same
command-template-copy-success=Successfully copied the template {0$sourceTemplate$} to the template {1$targetTemplate$}
command-template-copy=Trying to copy the template {0$sourceTemplate$} to the template {1$targetTemplate$}...
command-template-create-failed=Failed to prepare the template {0$template$} in the storage {1$storage$}
command-template-create-success=The template {0$template$} was successfully created and prepared in the storage {1$storage$}
command-template-create-template-already-exists=The template {0$template$} already exists in the storage {1$storage$}
command-template-delete-success=The template {0$template$} was successfully removed from the storage {1$storage$}
command-template-delete-template-not-found=The template {0$template$} doesn't exist in the storage {1$storage$}
command-template-invalid-version-type=That version type doesn't exist
command-template-invalid-version=That version doesn't exist for that version type
command-template-not-found=The template {0$template$} doesn't exist
command-template-not-valid=The given template name is not valid!
command-template-storage-not-found=That storage {0$storage$} doesn't exist
command-template-environment-not-found=The environment {0$env$} doesn't exist
#
# Command Version
#
command-version-description=Manage service versions in templates or on static services
command-version-static-service-invalid=The given service does not exist (maybe the service was never started before?)
command-version-install-failed=Unable to install the requested service version!
command-version-install-success=The requested service version was successfully installed
command-version-install-try=Trying to install the requested service version...
command-version-install-wrong-java=The version {0$version$} is not compatible with your current java version {1$java$}
#
# Module Bridge
#
module-bridge-command-description=Management for the config of the bridge module
module-bridge-player-command-description=Management for online and offline cloud players
module-bridge-tasks-setup-default-fallback=Which fallback task should be used for this proxy? (Leave empty if you don't want to configure it now)
module-bridge-command-create-entry-success=The bridge configuration entry has been created
module-bridge-command-entry-already-exists=There already is a configuration entry for this group
module-bridge-command-players-delete-player=The player {0$name$}#{1$uniqueId$} will be deleted from the database
module-bridge-command-players-kick-player-force=Notice that force disconnecting a player is not supported and should not be used when not necessary!
module-bridge-command-players-kick-player=The player {0$name$}#{1$uniqueId$} will be kicked from the network with reason "{2$reason$}"...
module-bridge-command-players-player-not-online=That player isn't online
module-bridge-command-players-player-not-registered=That player isn't registered
module-bridge-command-players-send-player-message=The message will be sent to the player {0$name$}#{1$uniqueId$}...
module-bridge-command-players-send-player-server-not-found=That service doesn't exist
module-bridge-command-players-send-player-server=The player {0$name$}#{1$uniqueId$} will be sent to the service...
#
# Module Cloudflare
#
module-cloudflare-create-dns-record-for-service=DNS Entry on domain {0$domain$} was created for service {1$service$} with the id {2$recordId$}
module-cloudflare-delete-dns-record-for-service=DNS entry was deleted on domain {0$domain$} for service {1$service$} with the id {2$recordId$}
#
# Module NPC
#
module-npc-command-description=Administration of npc configurations
module-npc-command-create-entry-success=The npc configuration entry has been created
module-npc-tasks-setup-generate-default-config=Should the default NPC configuration entry be generated for this task?
module-npc-command-create-entry-group-already-exists=The npc configuration entry already exists
#
# Module Report
#
module-report-command-description=Uploads useful data about the node and cluster to a paste server
module-report-command-paste-failed=Failed to upload the data on {0$url$}
module-report-command-paste-success=The data has been uploaded on {0$url$}
module-report-command-service-not-found=The service {0$name$} is not registered
module-report-command-paste-server-not-found=The paste service {0$name$} is not registered
#
# Module Signs
#
module-sign-command-description=Administration of sign configurations
module-sign-command-create-entry-success=The sign configuration entry has been created
module-sign-tasks-setup-generate-default-config=Should the default signs configuration entry be generated for this task?
module-sign-command-create-entry-group-already-exists=The sign configuration entry already exists
#
# Module SyncProxy
#
module-syncproxy-command-description=Administration of all SyncProxy configurations
module-syncproxy-command-add-whitelist-entry=The entry {0$name$} was added to the {1$group$} configuration whitelist
module-syncproxy-command-create-entry-group-already-exists=There already is a configuration entry for this group
module-syncproxy-command-create-entry-success=The SyncProxy configuration entry has been created
module-syncproxy-command-remove-whitelist-entry=The entry {0$name$} was removed from the {1$group$} configuration whitelist
module-syncproxy-command-set-maintenance=The maintenance mode of configuration {0$group$} is now {1, choice, 0#disabled|1#enabled$maintenance$}
module-syncproxy-command-set-maxplayers=The player limit of configuration {0$group$} is now {1$count$}
#
# Module Smart
#
module-smart-command-description=Administration for the smart config of each task
module-smart-command-task-no-entry=The task {0$task$} has no configured smart entry
#
# Module Docker Services
#
module-docker-command-description=Administration of the docker module configuration
module-docker-command-set-success=The property {0$property$} was successfully changed to {1$value$}
module-docker-command-remove-success=The property {0$property$} was successfully removed
module-docker-command-add-collection-property=The {0$property$} {1$value$} was successfully added
module-docker-command-clear-collection-property=The {0$property$} were successfully cleared
module-docker-command-remove-collection-property=The {0$property$} {1$value$} was successfully removed
#
# Module Rest
#
module-rest-command-description=Management for rest users and their scopes
module-rest-user-already-existing=The rest user {0$id$} already exists
module-rest-user-create-successful=The rest user {0$id$} was successfully created
module-rest-user-delete-successful=The rest user {0$id$} was successfully deleted
module-rest-user-add-scope-successful=The scope {1$scope$} was successfully added to rest user {0$id$}
module-rest-user-remove-scope-successful=The scope {1$scope$} was successfully removed from rest user {0$id$}
module-rest-user-clear-scopes-successful=The scopes of rest user {0$id$} were successfully cleared
module-rest-user-password-changed=The password of rest user {0$id$} was successfully changed.
module-rest-user-password-match=The given password matches the password of rest user {0$id$}
module-rest-user-password-mismatch=The given password does not match the password of rest user {0$id$}
#
# version installer
#
versions-installer-deprecated-version=You are installing an unsupported version! These versions may contain security vulnerabilities and may not work as expected with CloudNet. Use at your own risk!
