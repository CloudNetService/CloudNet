#
# Copyright 2019-2022 CloudNetService team & contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# CloudNet language file
# Language: en_US
#
#
# Initial setup
cloudnet-init-eula-not-accepted=If you don't accept the eula, you cannot run a minecraft server!
cloudnet-init-eula=Do you agree to the Mojang EULA (https://account.mojang.com/documents/minecraft_eula)?
cloudnet-init-perms-add-default-groups=Should the default permission groups (Admin, Player) be created?
cloudnet-init-setup-cluster-cluster-id=What is the id of your cluster? (you can find it in the config.json on of your nodes)
cloudnet-init-setup-cluster-install=Is this node part of a cluster? (MultiRoot)
cloudnet-init-setup-cluster-list-nodes=What are the names of your already existing nodes? (separated by ";")
cloudnet-init-setup-cluster-node-host=What is the host and port of the node "{0$node$}"? (you can find it in the config.json at "listeners")
cloudnet-init-setup-host-address=On which host should the services be started on?
cloudnet-init-setup-internal-host=On which host and port should CloudNet run on? (This is NOT your proxy host/port)
cloudnet-init-setup-memory=How much memory (in MB) can the services running on this CloudNet node use?
cloudnet-init-setup-node-id=What should the name of this CloudNet node be?
cloudnet-init-setup-tasks-javacommand=What is the path to the Java executable?
cloudnet-init-setup-tasks-proxy-environment=What should be the environment of the proxy?
cloudnet-init-setup-tasks-proxy-version=Which ServiceVersion should be used on the proxies?
cloudnet-init-setup-tasks-server-environment=What should be the environment of the services?
cloudnet-init-setup-tasks-server-version=Which ServiceVersion should be used on the services?
cloudnet-init-setup-tasks-should-install-proxy=Should a default proxy be created?
cloudnet-init-setup-tasks-should-install-server=Should a default lobby be created?
cloudnet-init-setup-web-host=On which host and port should CloudNet's WebServer run?
#
# Console animations
#
ca-question-list-cancel=You can always cancel the process by typing "cancel"!
ca-question-list-cancelled=The process has been cancelled!
ca-question-list-explain=Use the arrow keys to scroll through all possible values (if there are default values specified). If there is a recommended value available, it is in the command input line by default.
ca-question-list-invalid-default=Please provide a valid value!
ca-question-list-possible-answers-list=Possible answers: {0$values$}
ca-question-list-question-list=You have to provide one of the following: {0$values$}
#
# Network
#
client-network-channel-close=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] has closed the connection
client-network-channel-init=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] connected to the server
server-network-channel-close=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] was closed
server-network-channel-init=Channel [serverAddress={0$serverAddress$} clientAddress={1$clientAddress$}] was connected
http-listener-bound=Successfully bound an HTTP listener to the address "{0$address$}"...
network-listener-bound=Successfully bound a network listener to the address "{0$address$}"...
network-selected-transport=Network components are using {0$transport$} transport
#
# Application lifecycle
#
start-version-provider=Loaded {0$amount$} service versions...
start-module-updater=Applying needed updates to installed modules...
start-commands=Registered commands...
start-node-connection-try=Trying to connect to node {0$name$} using listener {1$listener$}...
start-node-connection-waiting=Waiting for {0$amount$} node connections to establish...
start-requesting-data=Requesting cluster sync from head node...
start-done=Startup done, starting tick loop (Took {0$starttime$}ms)
stop-application=Stopping application...
stop-node-connections=Closing connections to all nodes of the cluster...
stop-providers=Closing providers...
stop-network-components=Closing network components...
stop-services=Stopping all running services...
stop-delete-temp=Deleting temporary files...
#
# Services
#
cloudnet-service-jar-file-not-found-error=No application file found for CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}]! Please check the availability of this file. Via "t install" a version can be installed into a template.
cloudnet-service-manager-cpu-usage-to-high-error=The CPU load is too high to create a new service! The system will try to start this service as soon as there are enough resources.
cloudnet-service-manager-max-memory-error=The maximum allocatable memory has been reached (of CloudNet, other system resources might still be available)! The limit has to be increased or other services need to be stopped.
cloudnet-service-networking-connected=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] was successfully connected to the channel [serverAddress={3$serverAddress$} clientAddress={4$clientAddress$}]
cloudnet-service-networking-disconnected=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] was closed by the channel [serverAddress={3$serverAddress$} clientAddress={4$clientAddress$}]
cloudnet-service-post-delete-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been deleted
cloudnet-service-post-prepared-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been prepared
cloudnet-service-post-start-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been started
cloudnet-service-post-stop-message=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] has been stopped
cloudnet-service-post-start-message-different-node=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] is starting on node {3$node$}...
cloudnet-service-post-stop-message-different-node=CloudService [uniqueId={0$id$} task={1$task$} name={2$name$}] is stopped on node {3$node$}...
#
# Cluster
#
cluster-local-db-warning=CloudNet runs in a cluster, but a local embedded database is used! This can cause big synchronization problems. Please consider switching to a central database (like MongoDB) that all nodes can connect to.
cluster-server-idling-too-long=Disconnecting node [uniqueId={0$id$}] because it was idling for too long! [lastUpdate={1$time$}s ago]
cluster-server-networking-authorization-failed=Authorization unfortunately failed to the node with the address {0$address$}
cluster-server-networking-disconnected=The connection to the node [uniqueId={0$id$}] was interrupted!
cluster-sync-accept-yours=Using and applying the local version to the cluster...
cluster-sync-accepted-theirs=Applying the proposed change...
cluster-sync-change-decision-question=Do you want to [1] accept the changes, [2] apply your version, [3] skip the change?
cluster-sync-skip=Skipped applying of the current change
#
# Modules
#
cloudnet-load-modules-invalid-checksum=The checksum of the module {0$module$} does not match, aborting update
cloudnet-install-modules-invalid-checksum=The checksum of the module {0$module$} does not match, aborting installation
cloudnet-post-install-dependency-module=Dependency {3$group$}:{4$name$}:{5$version$} for module {0$module_group$}:{1$module_name$}:{2$module_version$} was successfully installed
cloudnet-post-load-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was successfully loaded
cloudnet-post-reload-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was reloaded successfully
cloudnet-post-start-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was started successfully
cloudnet-post-stop-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was stopped successfully
cloudnet-post-unload-module=Module {0$module_group$}:{1$module_name$}:{2$module_version$} was removed successfully
#
# Commands
#
command-confirmation-no-requests=There are no commands to confirm
command-confirmation-required=Please confirm executing the command by executing 'confirm' within 30s
command-console-only=This command can be executed using the console only
command-driver-only=This command can be executed using the driver only
command-not-found=Command could not be found! For help, use the command "help"
command-sub-no-permission=You are not allowed to use this sub command!
command-invalid-syntax=Invalid syntax! Use {0$syntax$}
#
# General commands
#
command-general-group-does-not-exist=That group doesn't exist!
#
# Command Cluster
#
command-cluster-add-node-success=Registered the new node to the cluster configuration. The new node can now connect to this node
command-cluster-invalid-host=The provided host name is invalid
command-cluster-node-not-found=That node doesn't exist
command-cluster-node-set-drain=Draining is now {0, choice, 0#disabled|1#enabled$drain$} for node {1$node$}
command-cluster-push-static-service-failed=Failed to deploy the static service to the cluster
command-cluster-push-static-service-not-found=The static service was not found
command-cluster-push-static-service-running=The static service is running. Stop the service to deploy it into the cluster
command-cluster-push-static-service-starting=Starting the deployment of the static service...
command-cluster-push-static-service-success=Successfully deployed the static service into the cluster
command-cluster-push-static-service-existing=The received static service {0$service$} already exists, aborting deployment
command-cluster-push-static-service-received-success=Successfully received the deployed static service {0$service$}
command-cluster-push-static-service-running-remote=The received static service {0$service$} is running, aborting deployment
command-cluster-push-template-compress=Compressing the template {0$template$}...
command-cluster-push-template-failed=Failed to send the local template {0$template$} to the cluster
command-cluster-push-template-success=The local template {0$template$} was successfully sent to all nodes
command-cluster-remove-node-success=The node {0$node$} has been removed successfully
command-cluster-start-sync=The cluster sync starts now
#
# Command Service
#
command-service-copy-no-default-template=The service you provided does not have a default template, use "copy {0$name$} template=storage:prefix/name" to provide a template you would like to copy to
command-service-copy-success=The service {0$name$} was successfully copied to the template {1$template$}
command-service-add-deployment-success=The deployment {0$deployment$} was successfully added to the waiting deployments
command-service-deploy-deployment-success=The resources of the service were successfully deployed
command-service-add-inclusion-success=The inclusion {0$inclusion$} was successfully added to the waiting integrations
command-service-include-inclusion-success=All waiting inclusions were downloaded and installed to the service
command-service-add-template-success=The template {0$template$} was successfully found and was added to the waiting templates
command-service-include-templates-success=All waiting templates were copied to the service.
command-service-service-not-found=That service doesn't exist
command-service-toggle-disabled=Disabled the automatic console logging for {0$service$}
command-service-toggle-enabled=Enabled the automatic console logging for {0$service$}
#
# Command Create
#
command-create-by-task-starting=Starting to create {1$amount$} services for {0$task$}
command-create-by-task-failed=The services couldn't be created
command-create-by-task-success=The services were created based on the task. They can be managed with the 'service' command.
#
# Command Migrate
#
command-migrate-current-database=Migration of {0$db$} in progress...
command-migrate-database-connection-failed=The connection to the database failed
command-migrate-source-equals-target=Migrating data to the same database is not possible
command-migrate-success=Migrating {0$source$} to {1$target$} was successful
command-migrate-unknown-database-provider=This database type does not exist
#
# Command Modules
#
command-modules-install-missing-depend=The module {0$module$} requires these dependencies to run: {1$dependencies$}
command-modules-module-already-loaded=The module {0$module$} is already loaded
command-modules-module-file-not-found=The file {0$path$} does not exist
command-modules-module-installed=The module {0$module$} was successfully installed
command-modules-module-not-loaded=The module {0$module$} is not loaded
command-modules-module-not-started=The module {0$module$} is not started
command-modules-module-not-stopped=The module {0$module$} is not stopped
command-modules-module-runtime-module=The module {0$module$} is not reloadable as it is a runtime module
command-modules-no-such-installable-module=There is no module named {0$name$}
#
# Command Perms
#
command-permissions-create-group-already-exists=The group already exists
command-permissions-create-group-successful=The group {0$name$} was successfully created
command-permissions-create-user-already-exists=The user already exists
command-permissions-create-user-successful=The user {0$name$} was successfully created
command-permissions-delete-group-successful=The group {0$name$} was successfully deleted
command-permissions-delete-user-successful=The user {0$name$} was successfully deleted
command-permissions-group-add-group-successful=The group {0$group$} was added to the group {1$name$}
command-permissions-group-add-permission-successful=The permission {0$permission$} was assigned to the group {1$name$}
command-permissions-group-set-property=The {0$property$} of the group {0$group$} was set to {1$property$}
command-permissions-group-not-found=That group couldn't be found
command-permissions-group-remove-group-successful=The group {0$name$} was successfully removed from the group {1$group$}
command-permissions-group-remove-permission-successful=The permission {0$permission$} was removed from the group {1$name$}
command-permissions-not-enabled=The permission system isn't active!
command-permissions-reload-permissions-success=The permissions were successfully reloaded and sent to all nodes
command-permissions-user-add-group-successful=The group {0$group$} was added to the user {1$name$}
command-permissions-user-add-permission-successful=The permission {0$permission$} was assigned to the user {1$name$}
command-permissions-user-change-password-success=The password of {0$name$} was successfully changed
command-permissions-user-check-password=The password entered for the user {0$name$} is {1, choice, 0#invalid|1#valid$valid$}
command-permissions-user-not-found=That user couldn't be found
command-permissions-user-remove-group-successful=The user {0$name$} has been removed from the group {1$group$}
command-permissions-user-remove-permission-successful=The permission {0$permission$} was removed from the user {1$name$}
command-permissions-user-rename-success=The name of the user {0$name$} was changed to {1$new_name$}
#
# Command Config
#
command-config-node-reload-config=The node configuration was reloaded. Note: Not all changes are applied without a restart
command-config-node-add-ip-whitelist=The ip {0$ip$} was added to the ip whitelist
command-config-node-ip-invalid=The ip address {0$ip$} is not valid!
command-config-node-remove-ip-whitelist=The ip address {0$ip$} was removed from the ip whitelist
command-config-node-max-memory-set=The maximum memory for the node is now set to {0$memory$}
command-config-node-set-java-command=The default java command for services is now set to {0$path$} using Java version {1$version$}
#
# Command service base (Group, Task)
#
command-service-base-clear-property=The {0$property$} for the {1$base-type$} {2$base$} were cleared successfully
#
# Command Groups
#
command-groups-add-collection-property=The {0$property$} {1$value$} was successfully added to the group {2$group$}
command-groups-remove-collection-property=The {0$property$} {1$value$} was successfully removed from the group {2$group$}
command-groups-delete-group=The group was successfully deleted
command-groups-group-already-existing=That group already exists
command-groups-reload-success=The group configurations have been reloaded
command-groups-create-success=The group {0$name$} was successfully created
#
# Tasks
#
cloudnet-load-task-unknown-java-version=Could not resolve Java version for {0$task$}
#
# Command Tasks
#
command-tasks-create-task=The empty task was successfully created. Configure it via the command 'tasks' or in the configuration file
command-tasks-delete-task=The task was successfully deleted
command-tasks-node-not-found=That node doesn't exist!
command-tasks-reload-success=The ServiceTasks have been reloaded!
command-tasks-add-collection-property=The {0$property$} {1$value$} was successfully added to the task {2$task$}
command-tasks-set-property-success=The {0$property$} of the task {1$name$} was changed to {2$value$}
command-tasks-remove-collection-property=The {0$property$} {1$value$} was successfully removed from the task {2$task$}
command-tasks-task-already-existing=That task already exists!
command-tasks-task-not-found=That task doesn't exist!
#
# Command Tasks (setup)
#
command-tasks-setup-create-success=The new task {0$name$} has been successfully created!
command-tasks-setup-question-application=Which ServiceVersion should be ran on services of this task?
command-tasks-setup-question-environment=What should be the environment of this task?
command-tasks-setup-question-javacommand-invalid=The provided executable is not a valid java installation path.
command-tasks-setup-question-javacommand=What is the path to the Java executable?
command-tasks-setup-question-maintenance=Should the task be in maintenance by default? (this prevents auto starting of the services)
command-tasks-setup-question-memory=How much memory is each service of the task allowed to use? (in MB)
command-tasks-setup-question-minservices=How many services of this task should be always online?
command-tasks-setup-question-name-splitter=What should the name splitter of the new task be?
command-tasks-setup-question-name=What should the name of the new task be?
command-tasks-setup-question-nodes=On which nodes can the services of this task start? (separated by ";")
command-tasks-setup-question-startport=What should be the start port of the task?
command-tasks-setup-question-static=Should the services of this task be static that their files are never deleted?
#
# Command Template
#
command-template-copy-failed=Unable to prepare source template for deployment! Does the source template exists?
command-template-copy-same-source-and-target=The source and target templates cannot be the same
command-template-copy-success=Successfully copied the template {0$sourceTemplate$} to the template {1$targetTemplate$}
command-template-copy=Trying to copy the template {0$sourceTemplate$} to the template {1$targetTemplate$}...
command-template-create-failed=Failed to prepare the template {0$template$} in the storage {1$storage$}
command-template-create-success=The template {0$template$} was successfully created and prepared in the storage {1$storage$}
command-template-create-template-already-exists=The template {0$template$} already exists in the storage {1$storage$}
command-template-delete-success=The template {0$template$} was successfully removed from the storage {1$storage$}
command-template-delete-template-not-found=The template {0$template$} doesn't exist in the storage {1$storage$}
command-template-install-failed=Unable to install version {0$version$} to {1$template$}
command-template-install-success=The version {0$version$} was successfully installed to {1$template$}
command-template-install-try=Trying to install {0$version$} to the template {1$template$}...
command-template-install-wrong-java=The version {0$version$} is not compatible with your current java version {1$java$}
command-template-invalid-version-type=That version type doesn't exist
command-template-invalid-version=That version doesn't exist for that version type
command-template-not-found=The template {0$template$} doesn't exist
command-template-storage-not-found=That storage {0$storage$} doesn't exist
command-template-environment-not-found=The environment {0$env$} doesn't exist
#
# Module Bridge
#
module-bridge-command-entry-already-exists=There already is a configuration entry for this group
module-bridge-command-players-delete-player=The player {0$name$}#{1$uniqueId$} will be deleted from the database
module-bridge-command-players-kick-player-force=Notice that force disconnecting a player is not supported and should not be used when not necessary!
module-bridge-command-players-kick-player=The player {0$name$}#{1$uniqueId$} will be kicked from the network with reason "{2$reason$}"...
module-bridge-command-players-player-not-online=That player isn't online
module-bridge-command-players-player-not-registered=That player isn't registered
module-bridge-command-players-send-player-message=The message will be sent to the player {0$name$}#{1$uniqueId$}...
module-bridge-command-players-send-player-server-not-found=That service doesn't exist
module-bridge-command-players-send-player-server=The player {0$name$}#{1$uniqueId$} will be sent to the service...
#
# Module Cloudflare
#
module-cloudflare-create-dns-record-for-service=DNS Entry on domain {0$domain$} was created for service {1$service$} with the id {2$recordId$}
module-cloudflare-delete-dns-record-for-service=DNS entry was deleted on domain {0$domain$} for service {1$service$} with the id {2$recordId$}
#
# Module NPC
#
module-npcs-command-create-entry-success=The npc configuration entry has been created
module-npcs-tasks-setup-generate-default-config=Should the default NPC configuration entry be generated for this task?
#
# Module Report
#
module-report-command-paste-failed=Failed to upload the data on {0$url$}
module-report-command-paste-success=The data has been uploaded on {0$url$}
module-report-create-record-success=A new record is now created for {0$service$} in directory {1$file$}
module-report-heap-dump-failed=Failed to create heap dump!
module-report-heap-dump-success=The heap dump was saved to {0$path$}
module-report-thread-dump-failed=Failed to create thread dump!
module-report-thread-dump-success=The thread dump saved to {0$path$}
#
# Module Signs
#
module-signs-command-create-entry-already-there=The sign configuration entry already exists
module-signs-command-create-entry-success=The sign configuration entry has been created
module-signs-tasks-setup-generate-default-config=Should the default signs configuration entry be generated for this task? (only available on Bukkit and Nukkit servers)
#
# Module SyncProxy
#
module-syncproxy-command-add-whitelist-entry=The entry {0$name$} was added to the configuration {1$group$}
module-syncproxy-command-create-entry-group-already-exists=There already is a configuration entry for this group
module-syncproxy-command-create-entry-success=The SyncProxy configuration entry has been created
module-syncproxy-command-remove-whitelist-entry=The entry {0$name$} was removed from the configuration {1$group$}
module-syncproxy-command-set-maintenance=The maintenance mode of configuration {0$group$} is now set to {1$maintenance$}
module-syncproxy-command-set-maxplayers=The player limit of configuration {0$group$} is now {1$count$}
#
# version installer
#
versions-installer-deprecated-version=You are installing an unsupported version! These versions may contain security vulnerabilities and may not work as expected with CloudNet. Use at your own risk!
