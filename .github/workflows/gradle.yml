name: "Build"

on:
  push:
    branches: [ "**" ]
    tags-ignore: [ "**" ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and publish
    strategy:
      fail-fast: false
      matrix:
        java:
          - 17
          - 19-ea

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'gradle'

      - name: Run build lifecycle
        run: ./gradlew build test shadowJar genUpdaterInformation --no-daemon --stacktrace

      - name: Publish updater metadata
        uses: s0/git-publish-subdir-action@develop
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/renovate/') && matrix.java == 17 }}
        env:
          REPO: git@github.com:CloudNetService/launchermeta.git
          BRANCH: ${{ steps.branch-name.outputs.current_branch }}
          FOLDER: '.launchermeta'
          SQUASH_HISTORY: true
          SKIP_EMPTY_COMMITS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MESSAGE: 'Update launcher meta for {target-branch} (commit: {sha})'

      - name: Set version type in GitHub environment
        if: ${{ matrix.java == 17 }}
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi

      - name: Publish to Sonatype
        if: ${{ github.event_name == 'push' && env.STATUS != 'release' && startsWith(github.ref, 'refs/heads/nightly') && matrix.java == 17 }}
        run: ./gradlew publish
        env:
          sonatypeUsername: "${{ secrets.SONATYPE_USER }}"
          sonatypePassword: "${{ secrets.SONATYPE_KEY }}"

      - name: Prepare artifacts zip
        if: ${{ github.event_name == 'push' && matrix.java == 17 }}
        run: |
          mkdir -p temp/;
          mkdir -p temp/plugins;

          cp -r .template/* temp/;
          cp LICENSE temp/license.txt;
          cp launcher/java17/build/libs/launcher.jar temp/launcher.jar;

          find plugins/ -type f -regex '.*/build/libs/.*\.jar' ! -name '*-javadoc.jar' ! -name '*-sources.jar' -exec cp {} temp/plugins \;

      - name: Upload artifacts zip
        uses: actions/upload-artifact@v3
        if: ${{ github.event_name == 'push' && matrix.java == 17 }}
        with:
          name: CloudNet
          path: temp/
