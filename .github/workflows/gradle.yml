name: "Build"

on:
  push:
    branches: [ "**" ]
    tags-ignore: [ "**" ]
  pull_request:
  workflow_dispatch:
  merge_group:

concurrency:
  cancel-in-progress: true
  group: build-${{ github.event.pull_request.number || github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and publish
    strategy:
      fail-fast: false
      matrix:
        java:
          - 17

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          check-latest: true
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - name: Setup gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/nightly' || matrix.java != 17 }}

      - name: Setup Loom cache
        uses: actions/cache@v4
        with:
          path: '.gradle/loom-cache'
          restore-keys: ${{ runner.os }}-gradle-loom-
          key: ${{ runner.os }}-gradle-loom-${{ hashFiles('gradle/libs.versions.toml', 'gradle/wrapper/gradle-wrapper.properties') }}

      - name: Execute build and tests
        run: ./gradlew build test shadowJar genUpdaterInformation --stacktrace

      - name: Publish test summary
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && matrix.java == 17 }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Publish updater metadata
        uses: s0/git-publish-subdir-action@develop
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/renovate/') && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && matrix.java == 17 }}
        env:
          REPO: git@github.com:CloudNetService/launchermeta.git
          BRANCH: ${{ steps.branch-name.outputs.current_branch }}
          FOLDER: '.launchermeta'
          SQUASH_HISTORY: true
          SKIP_EMPTY_COMMITS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MESSAGE: 'Update launcher meta for {target-branch} (commit: {sha})'

      - name: Set version type in GitHub environment
        if: ${{ matrix.java == 17 }}
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi

      - name: Publish snapshot to Sonatype
        if: ${{ github.event_name == 'push' && env.STATUS != 'release' && startsWith(github.ref, 'refs/heads/nightly') && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && matrix.java == 17 }}
        run: ./gradlew publish
        env:
          SONATYPE_USER: "${{ secrets.SONATYPE_USER }}"
          SONATYPE_TOKEN: "${{ secrets.SONATYPE_TOKEN }}"

      - name: Prepare artifacts zip
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && matrix.java == 17 }}
        run: |
          mkdir -p temp/;
          mkdir -p temp/plugins;

          cp -r .template/* temp/;
          cp LICENSE temp/license.txt;
          cp launcher/java17/build/libs/launcher.jar temp/launcher.jar;

          find plugins/ -type f -regex '.*/build/libs/.*\.jar' ! -name '*-javadoc.jar' ! -name '*-sources.jar' -exec cp {} temp/plugins \;

      - name: Upload artifacts zip
        uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && matrix.java == 17 }}
        with:
          name: CloudNet
          path: temp/
