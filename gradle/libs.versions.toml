metadata.format.version = "1.1"

[versions]

# plugins
shadow = "7.1.2"
blossom = "1.3.1"
juppiter = "0.4.0"
spotless = "6.11.0"
fabricLoom = "1.0.11"
nexusPublish = "1.1.0"

# google libs
gson = "2.10"
guava = "31.1-jre"

# testing
junit = "5.9.1"
mockito = "4.8.1"
tyrusClient = "2.1.1"
testcontainers = "1.17.5"

# compile time processing
lombok = "1.18.24"

# console
jansi = "2.4.0"
jline = "3.21.0"
cloud = "1.8.0-cn1"

# databases
h2 = "1.4.197" # do not update, leads to database incompatibility
xodus = "2.0.1"
mongodb = "4.7.2"
hikariCp = "5.0.1"
mysqlConnector = "8.0.31"

# general
asm = "9.4"
oshi = "6.3.1"
sshj = "0.34.0"
jjwt = "0.11.5"
slf4j = "1.7.36"
caffeine = "3.1.1"
awsSdk = "2.18.16"
reflexion = "1.6.0"
dockerJava = "3.2.13"
unirest = "4.0.0-RC2"
nightConfig = "3.6.6"
annotations = "23.0.0"
influxClient = "6.6.0"
netty = "5.0.0.Alpha5"
gulf = "1.0.0-SNAPSHOT"

# platform api versions
sponge = "9.0.0"
velocity = "3.1.1"
waterdogpe = "1.2.2"
nukkitX = "1.0-SNAPSHOT"
minestom = "b37bef427f"
spigot = "1.8.8-R0.1-SNAPSHOT"
bungeecord = "1.19-R0.1-SNAPSHOT"

# platform extensions
vault = "1.7.1"
adventure = "4.11.0"
modlauncher = "8.1.3"
npcLib = "3.0.0-beta1"
placeholderApi = "2.11.2"

# fabric platform special dependencies
minecraft = "1.19.2"
fabricLoader = "0.14.10"


[libraries]

# compile time processing
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }

# google libs
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# console
jline = { group = "org.jline", name = "jline", version.ref = "jline" }
jansi = { group = "org.fusesource.jansi", name = "jansi", version.ref = "jansi" }

# night config
nightConfigToml = { group = "com.electronwill.night-config", name = "toml", version.ref = "nightConfig" }
nightConfigYaml = { group = "com.electronwill.night-config", name = "yaml", version.ref = "nightConfig" }

# cloud commands
cloudCore = { group = "com.github.CloudNetService.cloud-command-framework", name = "cloud-core", version.ref = "cloud" }
cloudAnnotations = { group = "com.github.CloudNetService.cloud-command-framework", name = "cloud-annotations", version.ref = "cloud" }

# jjwt
jjwtApi = { group = "io.jsonwebtoken", name = "jjwt-api", version.ref = "jjwt" }
jjwtImpl = { group = "io.jsonwebtoken", name = "jjwt-impl", version.ref = "jjwt" }
jjwtGson = { group = "io.jsonwebtoken", name = "jjwt-gson", version.ref = "jjwt" }

# junit
junitApi = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junitParams = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }
junitEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }

# general testing
mockitoInline = { group = "org.mockito", name = "mockito-inline", version.ref = "mockito" }
mockito = { group = "org.mockito", name = "mockito-junit-jupiter", version.ref = "mockito" }
tyrus = { group = "org.glassfish.tyrus.bundles", name = "tyrus-standalone-client", version.ref = "tyrusClient" }

# testcontainers
testContainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testContainersJunit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }

# unirest
unirest = { group = "com.konghq", name = "unirest-java", version.ref = "unirest" }
unirestGson = { group = "com.konghq", name = "unirest-object-mappers-gson", version.ref = "unirest" }

# docker-java
dockerJavaApi = { group = "com.github.docker-java", name = "docker-java-core", version.ref = "dockerJava" }
dockerJavaHttpclient5 = { group = "com.github.docker-java", name = "docker-java-transport-httpclient5", version.ref = "dockerJava" }

# netty
nettyHandler = { group = "io.netty", name = "netty5-handler", version.ref = "netty" }
nettyCodecHttp = { group = "io.netty", name = "netty5-codec-http", version.ref = "netty" }
nettyNativeEpoll = { group = "io.netty", name = "netty5-transport-native-epoll", version.ref = "netty" }
nettyNativeKqueue = { group = "io.netty", name = "netty5-transport-native-kqueue", version.ref = "netty" }

# general
asm = { group = "org.ow2.asm", name = "asm-tree", version.ref = "asm" }
sshj = { group = "com.hierynomus", name = "sshj", version.ref = "sshj" }
gulf = { group = "dev.derklaro.gulf", name = "gulf", version.ref = "gulf" }
slf4jNop = { group = "org.slf4j", name = "slf4j-nop", version.ref = "slf4j" }
awsSdk = { group = "software.amazon.awssdk", name = "s3", version.ref = "awsSdk" }
oshi = { group = "com.github.oshi", name = "oshi-core-java11", version.ref = "oshi" }
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" }
reflexion = { group = "dev.derklaro.reflexion", name = "reflexion", version.ref = "reflexion" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }
influxClient = { group = "com.influxdb", name = "influxdb-client-java", version.ref = "influxClient" }

# databases
h2 = { group = "com.h2database", name = "h2", version.ref = "h2" }
hikariCp = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikariCp" }
mongodb = { group = "org.mongodb", name = "mongodb-driver-sync", version.ref = "mongodb" }
xodus = { group = "org.jetbrains.xodus", name = "xodus-environment", version.ref = "xodus" }
mysqlConnector = { group = "com.mysql", name = "mysql-connector-j", version.ref = "mysqlConnector" }

# platform api
nukkitX = { group = "cn.nukkit", name = "nukkit", version.ref = "nukkitX" }
spigot = { group = "org.spigotmc", name = "spigot-api", version.ref = "spigot" }
sponge = { group = "org.spongepowered", name = "spongeapi", version.ref = "sponge" }
bungeecord = { group = "net.md-5", name = "bungeecord-api", version.ref = "bungeecord" }
minestom = { group = "com.github.Minestom", name = "minestom", version.ref = "minestom" }
velocity = { group = "com.velocitypowered", name = "velocity-api", version.ref = "velocity" }
waterdogpe = { group = "dev.waterdog.waterdogpe", name = "waterdog", version.ref = "waterdogpe" }

# adventure
adventureApi = { group = "net.kyori", name = "adventure-api", version.ref = "adventure" }
adventureSerializerGson = { group = "net.kyori", name = "adventure-text-serializer-gson", version.ref = "adventure" }
adventureSerializerLegacy = { group = "net.kyori", name = "adventure-text-serializer-legacy", version.ref = "adventure" }

# platform extensions
vault = { group = "com.github.MilkBowl", name = "VaultAPI", version.ref = "vault" }
npcLib = { group = "com.github.juliarn.NPC-Lib", name = "bukkit", version.ref = "npcLib" }
npcLibLabymod = { group = "com.github.juliarn.NPC-Lib", name = "labymod", version.ref = "npcLib" }
modLauncher = { group = "cpw.mods", name = "modlauncher", version.ref = "modlauncher" }
placeholderApi = { group = "me.clip", name = "placeholderapi", version.ref = "placeholderApi" }
bungeecordChat = { group = "net.md-5", name = "bungeecord-chat", version.ref = "bungeecord" }

# fabric platform special dependencies
minecraft = { group = "com.mojang", name = "minecraft", version.ref = "minecraft" }
fabricLoader = { group = "net.fabricmc", name = "fabric-loader", version.ref = "fabricLoader" }


[bundles]

npcLib = ["npcLib", "npcLibLabymod"]
unirest = ["unirest", "unirestGson"]
mockito = ["mockito", "mockitoInline"]
mysql = ["mysqlConnector", "hikariCp"]
cloud = ["cloudCore", "cloudAnnotations"]
netty = ["nettyHandler", "nettyCodecHttp"]
jjwt = ["jjwtApi", "jjwtImpl", "jjwtGson"]
junit = ["junitApi", "junitParams", "junitEngine"]
nightConfig = ["nightConfigToml", "nightConfigYaml"]
dockerJava = ["dockerJavaApi", "dockerJavaHttpclient5"]
testContainers = ["testContainers", "testContainersJunit"]
adventure = ["adventureApi", "adventureSerializerGson", "adventureSerializerLegacy"]

proxyPlatform = ["bungeecord", "velocity", "waterdogpe"]
serverPlatform = ["spigot", "sponge", "nukkitX", "minestom"]


[plugins]

blossom = { id = "net.kyori.blossom", version.ref = "blossom" }
fabricLoom = { id = "fabric-loom", version.ref = "fabricLoom" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
juppiter = { id = "eu.cloudnetservice.juppiter", version.ref = "juppiter" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish" }
